// Mocks generated by Mockito 5.3.2 from annotations
// in nubank_exercise/test/data/apis/link_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nubank_exercise/data/http_client/http_client_wrapper.dart'
    as _i3;
import 'package:nubank_exercise/domain/models/failure.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClientWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClientWrapper extends _i1.Mock implements _i3.HttpClientWrapper {
  @override
  _i4.Future<_i2.Either<_i5.Failure, T>> get<T>(
    String? path, {
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {#queryParams: queryParams},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, T>>.value(
            _FakeEither_0<_i5.Failure, T>(
          this,
          Invocation.method(
            #get,
            [path],
            {#queryParams: queryParams},
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, T>>.value(
            _FakeEither_0<_i5.Failure, T>(
          this,
          Invocation.method(
            #get,
            [path],
            {#queryParams: queryParams},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, T>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, T>> post<T>(
    String? path, {
    required Map<String, dynamic>? body,
    Map<String, dynamic>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #body: body,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, T>>.value(
            _FakeEither_0<_i5.Failure, T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #body: body,
              #queryParams: queryParams,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, T>>.value(
            _FakeEither_0<_i5.Failure, T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #body: body,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, T>>);
}
